

# getAllData

PREFIX data: <https://brandcek.com/data#>
      PREFIX id: <https://brandcek.com/cek#>
      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
      SELECT ?name ?birth ?contact ?age ?job ?HP ?Laptop ?TV 
      WHERE
      {
        ?id data:no ?no;
            data:name ?name ;
            data:birth ?birth ;
            data:contact ?contact ;
            data:age ?age ;
            data:job ?job ;
            data:hasHP ?nameHP ;
            data:hasLaptop ?nameLaptop ;
            data:hasTV ?nameTV .
            
            ?nameHP data:hpBrand ?HP .
            ?nameLaptop data:laptopBrand ?Laptop .
            ?nameTV data:tvBrand ?TV .
      }ORDER BY ASC(?no)


# getData1

PREFIX data: <https://skripsiKu.com/data#>
      PREFIX id: <https://skripsiKu.com/skripsi#>
      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
      SELECT ?title ?author ?NPM ?year ?angkatan ?guide1 ?guide2 ?examiner1 ?examiner2 ?examiner3
      WHERE
      {
        ?id data:title ?title ;
            data:author ?author ;
            data:NPM ?NPM ;
            data:hasYear ?nameYear ;
            data:hasAngkatan ?nameAngkatan ;
            data:hasGuide1 ?nameGuide1 ;
            data:hasGuide2 ?nameGuide2 ;
            data:hasExaminer1 ?nameExaminer1 ;
            data:hasExaminer2 ?nameExaminer2 ;
            data:hasExaminer3 ?nameExaminer3 .
            
            ?nameYear data:year ?year .
            ?nameAngkatan data:year ?angkatan .
            ?nameGuide1 data:lecturer ?guide1 .
            ?nameGuide2 data:lecturer ?guide2 .
            ?nameExaminer1 data:lecturer ?examiner1 .
            ?nameExaminer2 data:lecturer ?examiner2 .
            ?nameExaminer3 data:lecturer ?examiner3 .
            
            FILTER (
              regex(?id, "${value.input}", "i") ||
              regex(?title, "${value.input}", "i") ||
              regex(?author, "${value.input}", "i") ||
              regex(?NPM, "${value.input}", "i") ||
              regex(?year, "${value.input}", "i") ||
              regex(?angkatan, "${value.input}", "i") ||
              regex(?guide1, "${value.input}", "i") ||
              regex(?guide2, "${value.input}", "i") ||
              regex(?guide1, "${value.input}", "i") ||
              regex(?examiner1, "${value.input}", "i") ||
              regex(?examiner2, "${value.input}", "i") ||
              regex(?examiner3, "${value.input}", "i")
            )
      }

# getRandomData

PREFIX data: <https://skripsiKu.com/data#>
      PREFIX id: <https://skripsiKu.com/skripsi#>
      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
      SELECT ?title ?author ?NPM ?year ?angkatan ?guide1 ?guide2 ?examiner1 ?examiner2 ?examiner3
      WHERE
      {
        ?id data:title ?title ;
            data:author ?author ;
            data:NPM ?NPM ;
            data:hasYear ?nameYear ;
            data:hasAngkatan ?nameAngkatan ;
            data:hasGuide1 ?nameGuide1 ;
            data:hasGuide2 ?nameGuide2 ;
            data:hasExaminer1 ?nameExaminer1 ;
            data:hasExaminer2 ?nameExaminer2 ;
            data:hasExaminer3 ?nameExaminer3 .
            
            ?nameYear data:year ?year .
            ?nameAngkatan data:year ?angkatan .
            ?nameGuide1 data:lecturer ?guide1 .
            ?nameGuide2 data:lecturer ?guide2 .
            ?nameExaminer1 data:lecturer ?examiner1 .
            ?nameExaminer2 data:lecturer ?examiner2 .
            ?nameExaminer3 data:lecturer ?examiner3 .
      }
      ORDER BY RAND()
      LIMIT 20

# getFromTheNewest

PREFIX data: <https://skripsiKu.com/data#>
      PREFIX id: <https://skripsiKu.com/skripsi#>
      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
      SELECT ?title ?author ?NPM ?year ?angkatan ?guide1 ?guide2 ?examiner1 ?examiner2 ?examiner3
      WHERE
      {
        ?id data:no ?no;
            data:title ?title ;
            data:author ?author ;
            data:NPM ?NPM ;
            data:hasYear ?nameYear ;
            data:hasAngkatan ?nameAngkatan ;
            data:hasGuide1 ?nameGuide1 ;
            data:hasGuide2 ?nameGuide2 ;
            data:hasExaminer1 ?nameExaminer1 ;
            data:hasExaminer2 ?nameExaminer2 ;
            data:hasExaminer3 ?nameExaminer3 .
            
            ?nameYear data:year ?year .
            ?nameAngkatan data:year ?angkatan .
            ?nameGuide1 data:lecturer ?guide1 .
            ?nameGuide2 data:lecturer ?guide2 .
            ?nameExaminer1 data:lecturer ?examiner1 .
            ?nameExaminer2 data:lecturer ?examiner2 .
            ?nameExaminer3 data:lecturer ?examiner3 .

      }
      ORDER BY DESC(?no)

# getDataAdvanced

PREFIX data: <https://brandcek.com/data#>
      PREFIX id: <https://brandcek.com/cek#>
      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
      SELECT ?name ?birth ?contact ?age ?job ?HP ?Laptop ?TV 
      WHERE
      {
        ?id data:no ?no;
            data:name ?name ;
            data:birth ?birth ;
            data:contact ?contact ;
            data:age ?age ;
            data:job ?job ;
            data:hasHP ?nameHP ;
            data:hasLaptop ?nameLaptop ;
            data:hasTV ?nameTV .
            
            ?nameHP data:hpBrand ?HP .
            ?nameLaptop data:laptopBrand ?Laptop .
            ?nameTV data:tvBrand ?TV .
      }
      ORDER BY DESC(?no)`,
    }
  };

  export const getDataAvancedQuery = (value) => {
    return {
      query: `PREFIX data: <https://brandcek.com/data#>
      PREFIX id: <https://brandcek.com/cek#>
      PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
      SELECT ?name ?birth ?contact ?age ?job ?HP ?Laptop ?TV 
      WHERE
      {
        ?id data:no ?no;
            data:name ?name ;
            data:birth ?birth ;
            data:contact ?contact ;
            data:age ?age ;
            data:job ?job ;
            data:hasHP ?nameHP ;
            data:hasLaptop ?nameLaptop ;
            data:hasTV ?nameTV .
            
            ?nameHP data:hpBrand ?HP .
            ?nameLaptop data:laptopBrand ?Laptop .
            ?nameTV data:tvBrand ?TV .
            
            FILTER contains(lcase(str(?name)), lcase(str("${
              value.name ? value.name : ""
            }")))
            FILTER contains(lcase(str(?birth)), lcase(str("${
              value.birth ? value.birth : ""
            }")))
            FILTER contains(lcase(str(?age)), lcase(str("${
              value.age ? value.age : ""
            }")))
            FILTER contains(lcase(str(?job)), lcase(str("${
              value.job ? value.job : ""
            }")))
            FILTER contains(lcase(str(?HP)), lcase(str("${
              value.HP ? value.HP : ""
            }")))
            FILTER contains(lcase(str(?Laptop)), lcase(str("${
              value.Laptop ? value.Laptop : ""
            }")))
            FILTER contains(lcase(str(?TV)), lcase(str("${
              value.TV ? value.TV : ""
            }")))
      }
      ORDER BY ASC (?no)